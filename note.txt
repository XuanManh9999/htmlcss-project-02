Nếu là inline thì sẽ không set được width hight. 
Nếu là thẻ a thì sẽ không thay đổi được các padding trên dưới 
Với những phần riêng ta đặt thêm class cho nó là được
Margin thì sẽ tạo ra khoảng cách lên trên. Còn padding giúp làm đều màu 
Để ảnh không bị méo thì dùng object fix: cover
Cách căn giữa icon đó là cho thằng icon đó có display: flex kém 2 thuộc tính của trục của nó.
.hero-summary .item:nth-of-type(2) .icon{
    background: #FCEFFF;
} 
Tại thẻ có class item thứ 2 tác động lên class icon.
Khi 2 cái margin hoặc padding đối nhau, thì nó sẽ lấy cái cao hơn. Gọi là margin conslap.
Với định dạng svg mình có thể sử dụng để tùy chỉnh màu được, và nó có thể chạy trực tiếp trên
html được stroke là màu của nó.
Mặc định thẻ img nó sẽ hiển thị kích thước gốc của nó
word-break: break-all; Thuộc tính này giúp các text khi không có khoảng trắng trình duyệt 
vẫn nhận biết được và bẻ nó xuống hàng.
.line-clamp-two {
    display: -webkit-box;
    -webkit-line-clamp: var(--line-clamp, 2);
    -webkit-box-orient: vertical;
    overflow: hidden;
} Giúp khi người dùng nhập quá 2 dòng thì nó sẽ hiện dấu 3...; 
^ hiểu là nhảy ra ngoài một cấp
Sau này gặp khối nào đè nhau thì ta chỉ cần viết một class lên trên cha là ok.
Muốn set cái chữ bao nhiêu xuống hàng thì chỉ cần xét width cho nó.
Có cả thuộc tính inline-flex nghĩa là nó inline và vẫn có tính flex.
Khi ta đưa các thẻ lên 1 hàng để làm slider show nó sẽ bị nén lại ta có thẻ dùng 
 flex-shrink: 0; để nó không nén nữa dữ đúng kích thước